
#### CONFIGURATION FILES

# <<include ideogram.conf>>
<<include ticks.conf>>

#### KARYOTYPE FILE

# Chromosome name, size and color definition
karyotype = SFL_karyotype.txt

#### IDEOGRAM

########################################################################
# The <ideogram> block defines the position, size, labels and other    #
# properties of the segments on which data are drawn                   #
# can also be defined in separate configuration file                   #
########################################################################

<ideogram>

<spacing>

# Spacing between ideograms. Suffix "r" denotes a relative value. It
# is relative to circle circumference (e.g. space is 0.5% of
# circumference).
default = 0.0025r

# You can increase the spacing between specific ideograms.
#<pairwise hsY;hs1>
#spacing = 20r
#</pairwise>

</spacing>

### Ideogram position, thickness and fill.
#
# Radial position within the image of the ideograms. This value is
# usually relative ("r" suffix).
radius           = 0.8r

# Thickness of ideograms, which can be absolute (e.g. pixels, "p"
# suffix) or relative ("r" suffix). When relative, it is a fraction of
# image radius.
thickness        = 75p

# Ideograms can be drawn as filled, outlined, or both. When filled,
# the color will be taken from the last field in the karyotype file,
# or set by chromosomes_colors. Color names are discussed in
#
# http://www.circos.ca/documentation/tutorials/configuration/configuration_files
#
# When stroke_thickness=0p or if the parameter is missing, the ideogram is
# has no outline and the value of stroke_color is not used.

fill             = yes
stroke_color     = black
stroke_thickness = 2p

show_label       = yes
label_font       = bold


# 5% of inner radius outside outer ideogram radius
# label_radius = dims(ideogram,radius_inner) + 0.005r

# inside ideogram
# label_radius = (dims(ideogram,radius_inner)+dims(ideogram,radius_outer))/2-24

# 100 pixels inside the ideogram radius
label_radius = dims(ideogram,radius_inner) - 115p

label_with_tag   = yes
label_size       = 80
label_parallel   = yes
label_case       = upper

</ideogram>

#### TILE TRACKS

<plots>

type            = tile
layers_overflow = hide

## BACKGROUND INSIDE CIRCLE

<plot>

r0    = 0.61r
r1    = 0.97r
z       = -10

<backgrounds>

<background>

color = white

</background>

</backgrounds>

</plot>

## SYNTENY BLOCKS BY SPECIES 

## Master settings for all of the tile tracks
thickness=220

# SYNT BLOCKS DLAB

<plot>

file            = dlab.txt
r1              = 0.97r
r0              = 0.94r
orientation     = in

layers          = 15
margin          = 0.005u
#thickness       = 50
padding         = 4

color           = 45,97,168
layers_overflow = collapse
layers_overflow_color = 45,97,168

<rules>
#<rule>
#condition = var(size) < 150kb
#color     = eval((qw(lgrey grey dgrey vdgrey black))[remap_round(var(size),10000,150000,0,4)])
#</rule>

</rules>

</plot>

# SYNT BLOCKS LCAL

<plot>

file            = lcal.txt
r1              = 0.91r
r0              = 0.88r
orientation     = in

layers          = 15
margin          = 0.005u
#thickness       = 50
padding         = 4

color           = 63,142,47
layers_overflow = collapse
layers_overflow_color = 63,142,47

<rules>
#<rule>
#condition = var(size) < 150kb
#color     = eval((qw(lgrey grey dgrey vdgrey black))[remap_round(var(size),10000,150000,0,4)])
#</rule>

</rules>

</plot>

# SYNT BLOCKS TRUB

<plot>

file            = trub.txt
r1              = 0.85r
r0              = 0.82r
orientation     = in

layers          = 15
margin          = 0.005u
#thickness       = 50
padding         = 4

color           = 168,165,56
layers_overflow = collapse
layers_overflow_color = 168,165,56

<rules>
#<rule>
#condition = var(size) < 150kb
#color     = eval((qw(lgrey grey dgrey vdgrey black))[remap_round(var(size),10000,150000,0,4)])
#</rule>

</rules>

</plot>

# SYNT BLOCKS TNIG

<plot>

file            = tnig.txt
r1              = 0.79r
r0              = 0.76r
orientation     = in

layers          = 15
margin          = 0.005u
#thickness       = 50
padding         = 4

color           = 25,43,77
layers_overflow = collapse
layers_overflow_color = 25,43,77

<rules>
#<rule>
#condition = var(size) < 150kb
#color     = eval((qw(lgrey grey dgrey vdgrey black))[remap_round(var(size),10000,150000,0,4)])
#</rule>

</rules>

</plot>

# SYNT BLOCKS GACU

<plot>

file            = gacu.txt
r1              = 0.73r
r0              = 0.70r
orientation     = in

layers          = 15
margin          = 0.005u
#thickness       = 50
padding         = 4


color           = 90,43,130
layers_overflow = collapse
layers_overflow_color = 90,43,130



<rules>
#<rule>
#condition = var(size) < 150kb
#color     = eval((qw(lgrey grey dgrey vdgrey black))[remap_round(var(size),10000,150000,0,4)])
#</rule>

</rules>

</plot>

# SYNT BLOCKS ONIL

<plot>

file            = onil.txt
r1              = 0.67r
r0              = 0.64r
orientation     = in

layers          = 15
margin          = 0.005u
#thickness       = 50
padding         = 4

color           = 184,114,20
layers_overflow = collapse
layers_overflow_color = 184,114,20

<rules>
#<rule>
#condition = var(size) < 150kb
#color     = eval((qw(lgrey grey dgrey vdgrey black))[remap_round(var(size),10000,150000,0,4)])
#</rule>

</rules>

</plot>


## SNP LOCI

<plot>

file            = markers.txt
r1              = 1.80r
r0              = 1.01r
orientation     = out

layers          = 15
margin          = 0.00u
thickness       = 35
padding         = 8

layers_overflow = grow
color           = black
stroke_thickness = 7
stroke_color     = black

<rules>
#<rule>
#condition = var(size) < 150kb
#color     = eval((qw(lgrey grey dgrey vdgrey black))[remap_round(var(size),10000,150000,0,4)])
#</rule>

</rules>

</plot>


</plots>

################################################################
# The remaining content is standard and required. It is imported from
# default files in the Circos distribution.
#
# These should be present in every Circos configuration file and
# overridden as required. To see the content of these files,
# look in etc/ in the Circos distribution.
#
# It's best to include these files using relative paths. This way, the
# files if not found under your current directory will be drawn from
# the Circos distribution.
#
# As always, centralize all your inputs as much as possible.

<image>
# Included from Circos distribution.
<<include etc/image.conf>>
radius* = 6000p
</image>

# RGB/HSV color definitions, color lists, location of fonts, fill
# patterns. Included from Circos distribution.
#
# In older versions of Circos, colors, fonts and patterns were
# included individually. Now, this is done from a central file. Make
# sure that you're not importing these values twice by having
#
# *** DO NOT DO THIS ***
# <colors>
# <<include etc/colors.conf>>
# <colors>
# **********************
<<include etc/colors_fonts_patterns.conf>>

# Debugging, I/O an dother system parameters
# Included from Circos distribution.
<<include etc/housekeeping.conf>>
